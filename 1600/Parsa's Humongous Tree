#include <bits/stdc++.h>
#define REP(i,n) for (int i=1;i<=n;i++)
#define mod 1073741824
#define pb push_back
#define ff first
#define ss second
#define pii pair<int,int>
#define vi vector<int>
#define vl vector<long long int>
#define vii vector<pair<int,int>>
#define lld double
#define larg 1e9
#define lli long long int
#define ln "\n"
#define TxtIO   freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);

//this is for C
// 99999999
// 77774444
using namespace std;

void preprep()
{
	ios_base :: sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}

bool comp(pii a , pii b)
{
    if(a.first != b.first)      return a.first > b.first;
    else                        return a.second < b.second;
}

lli gcd(lli a, lli b)
{
    while (b != 0)
    {
            lli temp = b;
            b = a % b;
            a = temp;
    }

    return a;
}

lli n = 1e5 + 4;
vector<lli>  l(n) , r(n);
vector<vector<lli>> adj(n);
vector<vector<lli>> dp(n , vector<lli> (2));

void dfs(lli u , lli p)
{

    for(auto v : adj[u])
    {
        if(v == p)            continue;
        dfs(v , u);
    }

    for(auto v : adj[u])
    {
        if(v == p)              continue;
        dp[u][0] += max(abs(l[u] - l[v]) + dp[v][0]  , abs(l[u] - r[v]) + dp[v][1]);
        dp[u][1] += max(abs(r[u] - l[v]) + dp[v][0]  , abs(r[u] - r[v]) + dp[v][1]);
    }
}

void solve()
{
    cin>>n;
    l.resize(n+1) , r.resize(n+1);

    for(lli i=1 ; i<=n ; i++)        adj[i].clear() , dp[i][0] = 0 , dp[i][1] = 0;

    for(lli i=1 ; i<=n ; i++)        cin>>l[i]>>r[i];

    for(lli i=1 ; i<n ; i++)
    {
        lli u , v;
        cin>>u>>v;
        adj[u].push_back(v) , adj[v].push_back(u);
    }

    dfs(1,-1);

    cout<<max(dp[1][0] , dp[1][1])<<"\n";


}

int main()
{
    preprep();
    //TxtIO;
    lli q = 1;
    cin>>q;
    while(q--)      solve();

}
